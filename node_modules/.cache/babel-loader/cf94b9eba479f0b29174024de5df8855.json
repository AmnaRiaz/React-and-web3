{"ast":null,"code":"\"use strict\";\n\nimport _regeneratorRuntime from \"/home/invozone/React and web3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { arrayify } from \"@ethersproject/bytes\";\nexport function getUrl(href, options) {\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var request, response, body, headers;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (options == null) {\n              options = {};\n            }\n\n            request = {\n              method: options.method || \"GET\",\n              headers: options.headers || {},\n              body: options.body || undefined,\n              mode: \"cors\",\n              cache: \"no-cache\",\n              credentials: \"same-origin\",\n              redirect: \"follow\",\n              referrer: \"client\" // no-referrer, *client\n\n            };\n            _context.next = 4;\n            return fetch(href, request);\n\n          case 4:\n            response = _context.sent;\n            _context.next = 7;\n            return response.arrayBuffer();\n\n          case 7:\n            body = _context.sent;\n            headers = {};\n\n            if (response.headers.forEach) {\n              response.headers.forEach(function (value, key) {\n                headers[key.toLowerCase()] = value;\n              });\n            } else {\n              response.headers.keys().forEach(function (key) {\n                headers[key.toLowerCase()] = response.headers.get(key);\n              });\n            }\n\n            return _context.abrupt(\"return\", {\n              headers: headers,\n              statusCode: response.status,\n              statusMessage: response.statusText,\n              body: arrayify(new Uint8Array(body))\n            });\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n}","map":{"version":3,"sources":["../src.ts/browser-geturl.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,SAAS,QAAT,QAAyB,sBAAzB;AAMA,OAAM,SAAgB,MAAhB,CAAuB,IAAvB,EAAqC,OAArC,EAAsD;;;;;;;YACxD,IAAI,OAAO,IAAI,IAAf,EAAqB;cAAE,OAAO,GAAG,EAAV;YAAgB;;YAEjC,O,GAAU;cACZ,MAAM,EAAG,OAAO,CAAC,MAAR,IAAkB,KADf;cAEZ,OAAO,EAAG,OAAO,CAAC,OAAR,IAAmB,EAFjB;cAGZ,IAAI,EAAG,OAAO,CAAC,IAAR,IAAgB,SAHX;cAKZ,IAAI,EAAe,MALP;cAMZ,KAAK,EAAgB,UANT;cAOZ,WAAW,EAAsB,aAPrB;cAQZ,QAAQ,EAAmB,QARf;cASZ,QAAQ,EAAE,QATE,CASgB;;YAThB,C;;YAYC,OAAM,KAAK,CAAC,IAAD,EAAO,OAAP,CAAX;;;YAAX,Q;;YACO,OAAM,QAAQ,CAAC,WAAT,EAAN;;;YAAP,I;YAEA,O,GAAwC,E;;YAC9C,IAAI,QAAQ,CAAC,OAAT,CAAiB,OAArB,EAA8B;cAC1B,QAAQ,CAAC,OAAT,CAAiB,OAAjB,CAAyB,UAAC,KAAD,EAAQ,GAAR,EAAe;gBACpC,OAAO,CAAC,GAAG,CAAC,WAAJ,EAAD,CAAP,GAA6B,KAA7B;cACH,CAFD;YAGH,CAJD,MAIO;cAC2B,QAAQ,CAAC,OAAV,CAAoB,IAA3B,GAAoC,OAApC,CAA4C,UAAC,GAAD,EAAQ;gBACtE,OAAO,CAAC,GAAG,CAAC,WAAJ,EAAD,CAAP,GAA6B,QAAQ,CAAC,OAAT,CAAiB,GAAjB,CAAqB,GAArB,CAA7B;cACH,CAFqB;YAGzB;;6CAEM;cACH,OAAO,EAAE,OADN;cAEH,UAAU,EAAE,QAAQ,CAAC,MAFlB;cAGH,aAAa,EAAE,QAAQ,CAAC,UAHrB;cAIH,IAAI,EAAE,QAAQ,CAAC,IAAI,UAAJ,CAAe,IAAf,CAAD;YAJX,C;;;;;;;;;AAMV","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { arrayify } from \"@ethersproject/bytes\";\nexport function getUrl(href, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (options == null) {\n            options = {};\n        }\n        const request = {\n            method: (options.method || \"GET\"),\n            headers: (options.headers || {}),\n            body: (options.body || undefined),\n            mode: \"cors\",\n            cache: \"no-cache\",\n            credentials: \"same-origin\",\n            redirect: \"follow\",\n            referrer: \"client\", // no-referrer, *client\n        };\n        const response = yield fetch(href, request);\n        const body = yield response.arrayBuffer();\n        const headers = {};\n        if (response.headers.forEach) {\n            response.headers.forEach((value, key) => {\n                headers[key.toLowerCase()] = value;\n            });\n        }\n        else {\n            ((response.headers).keys)().forEach((key) => {\n                headers[key.toLowerCase()] = response.headers.get(key);\n            });\n        }\n        return {\n            headers: headers,\n            statusCode: response.status,\n            statusMessage: response.statusText,\n            body: arrayify(new Uint8Array(body)),\n        };\n    });\n}\n//# sourceMappingURL=geturl.js.map"]},"metadata":{},"sourceType":"module"}